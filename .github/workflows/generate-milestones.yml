# Keep your current creator, but make it idempotent (skip if exists).
name: Create Project Milestones

on:
  push:
    paths:
      - '.github/workflows/generate-milestones.yml'
  workflow_dispatch: {}

permissions:
  contents: read
  issues: write

jobs:
  create-milestones:
    runs-on: ubuntu-latest
    steps:
      - name: Upsert Milestone
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const desired = [
              { title: "🛠️ Project Initialization", description: "Foundation layer - Initializing the project." },
              { title: "🧪 Planning and Setup", description: "Initial stage focused on defining project scope, requirements, and setting up basic project infrastructure." },
              { title: "🧬 Feature Development", description: "Stage for building and implementing core project features and functionality." },
              { title: "🎯 Prototype and Validation", description: "Creating a prototype for validation, testing the feasibility, and refining key project aspects." },
              { title: "🛠️ Refinement and Optimization", description: "Focusing on refining features and optimizing performance before staging." },
              { title: "🧪 Staging and Testing", description: "Setting up the staging environment for final tests and quality assurance before release." },
              { title: "🎉 Public Release", description: "Launching the project to the public and ensuring stable deployment." },
              { title: "🎯 Post-Release and Maintenance", description: "Ongoing maintenance, bug fixes, and feature improvements after public release." }
            ];

            const existing = await github.paginate(
              github.rest.issues.listMilestones,
              { owner, repo, state: 'all', per_page: 100 }
            );

            const byTitle = new Map(existing.map(m => [m.title, m]));
            for (const m of desired) {
              if (byTitle.has(m.title)) {
                const curr = byTitle.get(m.title);
                await github.rest.issues.updateMilestone({
                  owner, repo, milestone_number: curr.number,
                  title: m.title,
                  description: m.description,
                  state: 'open'
                });
                core.info(`Updated milestone: ${m.title}`);
              } else {
                await github.rest.issues.createMilestone({
                  owner, repo,
                  title: m.title,
                  description: m.description,
                  state: 'open'
                });
                core.info(`Created milestone: ${m.title}`);
              }
            }
