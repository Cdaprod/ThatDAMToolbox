name: build-push-containers
on:
  push:
    branches: [ main ]
    tags: [ "v*" ]
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  ORG: cdaprod

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write   # for provenance attestation
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --config ./docker/buildkit.toml

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive tags
        id: vars
        run: |
          SHA=$(git rev-parse --short=12 HEAD)
          echo "sha=$SHA" >> $GITHUB_OUTPUT
          echo "date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

      - name: Build & push (multi)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/video-api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.ORG }}/video:${{ steps.vars.outputs.sha }}
            ghcr.io/${{ env.ORG }}/video:latest
          provenance: true
          sbom: true
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          cache-from: |
            type=registry,ref=ghcr.io/${{ env.ORG }}/thatdamtoolbox-cache:build
          cache-to: |
            type=registry,ref=ghcr.io/${{ env.ORG }}/thatdamtoolbox-cache:build,mode=max

      # repeat the build-push-action step (or matrix) for other images: video-web, web-site, etc.
