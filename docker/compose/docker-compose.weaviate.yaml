# ──────────────────────────────────────────────────────────────
# Weaviate + schema bootstrap
# ──────────────────────────────────────────────────────────────
services:
  weaviate:
    image: semitechnologies/weaviate:latest
    container_name: thatdamtoolbox-weaviate
    command: ["--host","0.0.0.0","--port","8080","--scheme","http"]
    ports:
      - "8082:8080"  # Weaviate REST
      - "50051:50051" # (gRPC, optional)
    environment:
      QUERY_DEFAULTS_LIMIT:                      "25"
      DEFAULT_VECTORIZER_MODULE:                 "none"
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED:   "true"
      PERSISTENCE_DATA_PATH:                     /var/lib/weaviate

      # Enable S3 backup module (targets MinIO)
      ENABLE_MODULES:                            "backup-s3"
      BACKUP_S3_BUCKET:                          "weaviate-backups"
      BACKUP_S3_ENDPOINT:                        "minio:9000"
      BACKUP_S3_ACCESS_KEY_ID:                   "thatdam_app"
      BACKUP_S3_SECRET_ACCESS_KEY:               "thatdam_app_secret"
      BACKUP_S3_USE_SSL:                         "false"
      AWS_S3_FORCE_PATH_STYLE:                   "true"
      AWS_ACCESS_KEY_ID:                         "thatdam_app"
      AWS_SECRET_ACCESS_KEY:                     "thatdam_app_secret"
      AWS_REGION:                                "us-east-1"

      # (Optional) Postgres storage
      POSTGRES_HOST:                             "postgres"
      POSTGRES_PORT:                             "5432"
      POSTGRES_PASSWORD:                         "weaviate"
      POSTGRES_USER:                             "weaviate"
      POSTGRES_DB:                               "weaviate"

      # Single-node cluster name
      CLUSTER_HOSTNAME:                          "node1"
    volumes:
      - ../../docker/weaviate/data/weaviate:/var/lib/weaviate
    depends_on:
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD","wget","-qO-","http://localhost:8080/v1/.well-known/ready"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 15s
    restart: unless-stopped
    networks: [damnet]


  # Ephemeral schema bootstrapper (runs once; safe to keep in stack)
  weaviate-schema-bootstrap:
    image: python:3.11
    depends_on:
      weaviate:
        condition: service_healthy
    volumes:
      - ../../docker/weaviate:/weaviate:ro
    working_dir: /weaviate
    entrypoint: ["python", "bootstrap-schema.py"]
    environment:
      WEAVIATE_URL: http://weaviate:8080
      WEAVIATE_SCHEMA: schema.json
    restart: "no"
    networks: [damnet]
