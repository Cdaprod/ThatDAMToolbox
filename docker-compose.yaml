name: thatdamtoolbox

x-logging: &default-logging
  driver: json-file
  options:
    max-size: "10m"
    max-file: "5"
    labels:   "io.github.thatdam.project,com.docker.compose.service,com.docker.compose.project"

x-build-common: &build-common
  args:
    BUILDKIT_INLINE_CACHE: "1"
  cache_from:
    - type=registry,ref=ghcr.io/cdaprod/thatdamtoolbox-cache:build,ignore-error=true
  labels:
    org.opencontainers.image.source:    "https://github.com/Cdaprod/Media-Indexer-Stdlib-Prototype"
    org.opencontainers.image.vendor:    "Cdaprod"
    org.opencontainers.image.title:     "ThatDAMToolbox"
    org.opencontainers.image.revision:  "${GIT_SHA:-dev}"
    org.opencontainers.image.version:   "${IMAGE_TAG:-dev}"
    org.opencontainers.image.licenses:  "Apache-2.0"

include:
  # Infra-grade services
  - path: ./docker/compose/docker-compose.buildkit.yaml
  - path: ./docker/compose/docker-compose.postgres.yaml
  - path: ./docker/compose/docker-compose.weaviate.yaml
  - path: ./docker/compose/docker-compose.minio.yaml
  - path: ./docker/compose/docker-compose.rabbitmq.yaml
  # Auth stacks (pick with profiles)
  - path: ./docker/compose/docker-compose.auth-auth0.yaml
  - path: ./docker/compose/docker-compose.auth-keycloak.yaml
  # Host/Golang services
  - path: ./docker/compose/docker-compose.discovery.yaml
  - path: ./docker/compose/docker-compose.gateway.yaml
  - path: ./docker/compose/docker-compose.api-gateway.yaml
  - path: ./docker/compose/docker-compose.overlay-hub.yaml
  - path: ./docker/compose/docker-compose.capture-daemon.yaml
  - path: ./docker/compose/docker-compose.camera-proxy.yaml
  - path: ./docker/compose/docker-compose.supervisor.yaml
  - path: ./docker/compose/docker-compose.runner.yaml
  - path: ./docker/compose/docker-compose.media-api.yaml
  - path: ./docker/compose/docker-compose.video-web.yaml
  - path: ./docker/compose/docker-compose.tenancy.yaml
  - path: ./docker/compose/docker-compose.web-site.yaml

networks:
  damnet:
    driver: bridge

secrets:
  dam_ephemeral_token:
    external: false
    environment: "DUMMY_TOKEN"

volumes:
  db_wal:
    driver: local
  rabbitmq_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${RABBITMQ_DATA_PATH:-./docker/rabbitmq/data}
  discovery-run:
    name: ${COMPOSE_PROJECT_NAME:-thatdamtoolbox}_discovery-run
